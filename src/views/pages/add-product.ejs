<div class="row justify-content-center">
    <div class="col-md-4">
      <div class="card rounded-3">
        <div class="card-header bg-warning text-white">
          <h5>Add New Product</h5>
        </div>
        <div class="card-body">
          <form id="addProductForm">
            <div class="mb-3">
              <label for="name" class="form-label">Name</label>
              <input type="text" class="form-control form-control-sm" id="name" name="name" required>
            </div>
            <div class="mb-3">
              <label for="category" class="form-label">Category</label>
              <select class="form-select form-select-sm" id="category" name="category" required>
                <option value="">Select Category</option>
                <option value="kids">Kids</option>
                <option value="women">Women</option>
                <option value="men">Men</option>
              </select>
            </div>
            <div class="mb-3">
              <label for="description" class="form-label">Description</label>
              <textarea class="form-control form-control-sm" id="description" name="description" required></textarea>
            </div>
            <div class="mb-3">
              <label for="price" class="form-label">Price</label>
              <input type="number" class="form-control form-control-sm" id="price" name="price" step="0.01" required>
            </div>
            <div class="mb-3">
              <label for="imageUpload" class="form-label">Image Upload</label>
              <input type="file" class="form-control form-control-sm" id="imageUpload" accept="image/*" required>
            </div>
            <button type="submit" class="btn btn-custom text-light">Add Product</button>
          </form>
        </div>
      </div>
    </div>
    </div>
    <script>
      const addProductForm = document.getElementById('addProductForm');
    
      // Add event listener for adding a new product
      addProductForm.addEventListener('submit', async (e) => {
        e.preventDefault();
    
        const formData = new FormData(addProductForm);
        const data = Object.fromEntries(formData);
    
        // Read the selected image file as Base64
        const imageFile = document.getElementById('imageUpload').files[0];
        const base64Image = await convertImageToBase64(imageFile);
    
        // Append the Base64 image data to the form data
        data.imageUrl = base64Image;
    
        try {
          const response = await fetch('/api/products', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
              'Authorization': `Bearer ${localStorage.getItem('token')}`
            },
            body: JSON.stringify(data)
          });
    
          if (response.ok) {
            addProductForm.reset();
            alert('Product added successfully');
          } else {
            const error = await response.json();
            console.error('Error adding product:', error.error);
          }
        } catch (err) {
          console.error(err);
        }
      });
    
    
      function convertImageToBase64(file) {
        return new Promise((resolve, reject) => {
          const reader = new FileReader();
          reader.onload = (event) => {
            const img = new Image();
            img.onload = () => {
              const canvas = document.createElement('canvas');
              const ctx = canvas.getContext('2d');
              canvas.width = img.width;
              canvas.height = img.height;
              ctx.drawImage(img, 0, 0);
    
              const mimeType = file.type || 'image/jpeg';
              const base64Data = canvas.toDataURL(mimeType);
              resolve(base64Data);
            };
            img.onerror = reject;
            img.src = event.target.result;
          };
          reader.onerror = reject;
          reader.readAsDataURL(file);
        });
      }
    
    </script>