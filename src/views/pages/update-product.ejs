<div class="row justify-content-center">
    <div class="col-md-4">
      <div class="card rounded-3" style="background-color: #ffe591; box-shadow: 0px 10px 20px rgba(0, 0, 0, 0.2);">
        <div class="card-header bg-primary text-white"
          style="background: linear-gradient(to right, #FFD700, #FFA500, #000000);">
          <h5>Update Product</h5>
        </div>
        <div class="card-body">
          <form id="updateProductForm">
            <div class="mb-3">
              <label for="name" class="form-label">Name</label>
              <input type="text" class="form-control form-control-sm" id="name" name="name">
            </div>
            <div class="mb-3">
              <label for="category" class="form-label">Category</label>
              <select class="form-select form-select-sm" id="category" name="category">
                <option value="">Select Category</option>
                <option value="kids">Kids</option>
                <option value="women">Women</option>
                <option value="men">Men</option>
              </select>
            </div>
            <div class="mb-3">
              <label for="description" class="form-label">Description</label>
              <textarea class="form-control form-control-sm" id="description" name="description"></textarea>
            </div>
            <div class="mb-3">
              <label for="price" class="form-label">Price</label>
              <input type="number" class="form-control form-control-sm" id="price" name="price" step="0.01">
            </div>
            <div class="mb-3">
              <label for="imageUpload" class="form-label">Image Upload</label>
              <input type="file" class="form-control form-control-sm" id="imageUpload" accept="image/*">
            </div>
            <button type="submit" class="btn btn-custom">Update Product</button>
          </form>
        </div>
      </div>
    </div>
  </div>
  <script>
  
    const updateProductForm = document.getElementById('updateProductForm');
    const productId = window.location.pathname.split('/').pop();
  
    fetch(`/api/products/${productId}`)
      .then(response => response.json())
      .then(product => {
        document.getElementById('name').value = product.name;
        document.getElementById('category').value = product.category;
        document.getElementById('description').value = product.description;
        document.getElementById('price').value = product.price;
      })
      .catch(error => console.error('Error fetching product:', error));
  
    updateProductForm.addEventListener('submit', async (e) => {
      e.preventDefault();
  
      const formData = new FormData(updateProductForm);
      const data = {};
  
      formData.forEach((value, key) => {
        if (value) {
          data[key] = value;
        }
      });
  
      const imageFile = document.getElementById('imageUpload').files[0];
      if (imageFile) {
        const base64Image = await convertImageToBase64(imageFile);
        data.imageUrl = base64Image;
      }
  
      try {
        const response = await fetch(`/api/products/${productId}`, {
          method: 'PATCH',
          headers: {
            'Content-Type': 'application/json',
            'Authorization': `Bearer ${localStorage.getItem('token')}`
          },
          body: JSON.stringify(data)
        });
  
        if (response.ok) {
          // Display a success message
          alert('Product updated successfully');
          window.location.href = `/vendor-dashboard`;
        } else {
          const error = await response.json();
          console.error('Error updating product:', error.error);
        }
      } catch (err) {
        console.error(err);
      }
    });
  
    function convertImageToBase64(file) {
      return new Promise((resolve, reject) => {
        const reader = new FileReader();
        reader.onload = (event) => {
          const img = new Image();
          img.onload = () => {
            const canvas = document.createElement('canvas');
            const ctx = canvas.getContext('2d');
            canvas.width = img.width;
            canvas.height = img.height;
            ctx.drawImage(img, 0, 0);
  
            const mimeType = file.type || 'image/jpeg';
            const base64Data = canvas.toDataURL(mimeType);
            resolve(base64Data);
          };
          img.onerror = reject;
          img.src = event.target.result;
        };
        reader.onerror = reject;
        reader.readAsDataURL(file);
      });
    }
  
  </script>